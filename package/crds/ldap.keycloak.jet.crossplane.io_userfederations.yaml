---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: userfederations.ldap.keycloak.jet.crossplane.io
spec:
  group: ldap.keycloak.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keycloakjet
    kind: UserFederation
    listKind: UserFederationList
    plural: userfederations
    singular: userfederation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UserFederation is the Schema for the UserFederations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserFederationSpec defines the desired state of UserFederation
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  batchSizeForSync:
                    description: The number of users to sync within a single transaction.
                    type: number
                  bindCredentialSecretRef:
                    description: Password of LDAP admin.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  bindDn:
                    description: DN of LDAP admin, which will be used by Keycloak
                      to access LDAP server.
                    type: string
                  cache:
                    description: Settings regarding cache policy for this realm.
                    items:
                      properties:
                        evictionDay:
                          description: Day of the week the entry will become invalid
                            on.
                          type: number
                        evictionHour:
                          description: Hour of day the entry will become invalid on.
                          type: number
                        evictionMinute:
                          description: Minute of day the entry will become invalid
                            on.
                          type: number
                        maxLifespan:
                          description: Max lifespan of cache entry (duration string).
                          type: string
                        policy:
                          type: string
                      type: object
                    type: array
                  changedSyncPeriod:
                    description: How frequently Keycloak should sync changed LDAP
                      users, in seconds. Omit this property to disable periodic changed
                      users sync.
                    type: number
                  connectionTimeout:
                    description: LDAP connection timeout (duration string)
                    type: string
                  connectionUrl:
                    description: Connection URL to the LDAP server.
                    type: string
                  customUserSearchFilter:
                    description: Additional LDAP filter for filtering searched users.
                      Must begin with '(' and end with ')'.
                    type: string
                  editMode:
                    description: READ_ONLY and WRITABLE are self-explanatory. UNSYNCED
                      allows user data to be imported but not synced back to LDAP.
                    type: string
                  enabled:
                    description: When false, this provider will not be used when performing
                      queries for users.
                    type: boolean
                  fullSyncPeriod:
                    description: How frequently Keycloak should sync all LDAP users,
                      in seconds. Omit this property to disable periodic full sync.
                    type: number
                  importEnabled:
                    description: When true, LDAP users will be imported into the Keycloak
                      database.
                    type: boolean
                  kerberos:
                    description: Settings regarding kerberos authentication for this
                      realm.
                    items:
                      properties:
                        kerberosRealm:
                          description: The name of the kerberos realm, e.g. FOO.LOCAL
                          type: string
                        keyTab:
                          description: Path to the kerberos keytab file on the server
                            with credentials of the service principal.
                          type: string
                        serverPrincipal:
                          description: The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
                          type: string
                        useKerberosForPasswordAuthentication:
                          description: Use kerberos login module instead of ldap service
                            api. Defaults to `false`.
                          type: boolean
                      required:
                      - kerberosRealm
                      - keyTab
                      - serverPrincipal
                      type: object
                    type: array
                  pagination:
                    description: When true, Keycloak assumes the LDAP server supports
                      pagination.
                    type: boolean
                  priority:
                    description: Priority of this provider when looking up users.
                      Lower values are first.
                    type: number
                  rdnLdapAttribute:
                    description: Name of the LDAP attribute to use as the relative
                      distinguished name.
                    type: string
                  readTimeout:
                    description: LDAP read timeout (duration string)
                    type: string
                  realmId:
                    description: The realm this provider will provide user federation
                      for.
                    type: string
                  searchScope:
                    description: 'ONE_LEVEL: only search for users in the DN specified
                      by user_dn. SUBTREE: search entire LDAP subtree.'
                    type: string
                  startTls:
                    description: When true, Keycloak will encrypt the connection to
                      LDAP using STARTTLS, which will disable connection pooling.
                    type: boolean
                  syncRegistrations:
                    description: When true, newly created users will be synced back
                      to LDAP.
                    type: boolean
                  trustEmail:
                    description: If enabled, email provided by this provider is not
                      verified even if verification is enabled for the realm.
                    type: boolean
                  usePasswordModifyExtendedOp:
                    description: When `true`, use the LDAPv3 Password Modify Extended
                      Operation (RFC-3062).
                    type: boolean
                  useTruststoreSpi:
                    type: string
                  userObjectClasses:
                    description: All values of LDAP objectClass attribute for users
                      in LDAP.
                    items:
                      type: string
                    type: array
                  usernameLdapAttribute:
                    description: Name of the LDAP attribute to use as the Keycloak
                      username.
                    type: string
                  usersDn:
                    description: Full DN of LDAP tree where your users are.
                    type: string
                  uuidLdapAttribute:
                    description: Name of the LDAP attribute to use as a unique object
                      identifier for objects in LDAP.
                    type: string
                  validatePasswordPolicy:
                    description: When true, Keycloak will validate passwords using
                      the realm policy before updating it.
                    type: boolean
                  vendor:
                    description: LDAP vendor. I am almost certain this field does
                      nothing, but the UI indicates that it is required.
                    type: string
                required:
                - connectionUrl
                - rdnLdapAttribute
                - realmId
                - userObjectClasses
                - usernameLdapAttribute
                - usersDn
                - uuidLdapAttribute
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: UserFederationStatus defines the observed state of UserFederation.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
