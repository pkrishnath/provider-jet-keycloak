---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: googleidentityproviders.oidc.keycloak.jet.crossplane.io
spec:
  group: oidc.keycloak.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keycloakjet
    kind: GoogleIdentityProvider
    listKind: GoogleIdentityProviderList
    plural: googleidentityproviders
    singular: googleidentityprovider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GoogleIdentityProvider is the Schema for the GoogleIdentityProviders
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GoogleIdentityProviderSpec defines the desired state of GoogleIdentityProvider
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  acceptsPromptNoneForwardFromClient:
                    description: This is just used together with Identity Provider
                      Authenticator or when kc_idp_hint points to this identity provider.
                      In case that client sends a request with prompt=none and user
                      is not yet authenticated, the error will not be directly returned
                      to client, but the request with prompt=none will be forwarded
                      to this identity provider.
                    type: boolean
                  addReadTokenRoleOnCreate:
                    description: Enable/disable if new users can read any stored tokens.
                      This assigns the broker.read-token role.
                    type: boolean
                  authenticateByDefault:
                    description: Enable/disable authenticate users by default.
                    type: boolean
                  clientId:
                    description: Client ID.
                    type: string
                  clientSecretSecretRef:
                    description: Client Secret.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  defaultScopes:
                    description: 'The scopes to be sent when asking for authorization.
                      See the documentation for possible values, separator and default
                      value''. Default: ''openid profile email'''
                    type: string
                  disableUserInfo:
                    description: Disable usage of User Info service to obtain additional
                      user information?  Default is to use this OIDC service.
                    type: boolean
                  enabled:
                    description: Enable/disable this identity provider.
                    type: boolean
                  extraConfig:
                    additionalProperties:
                      type: string
                    type: object
                  firstBrokerLoginFlowAlias:
                    description: Alias of authentication flow, which is triggered
                      after first login with this identity provider. Term 'First Login'
                      means that there is not yet existing Keycloak account linked
                      with the authenticated identity provider account.
                    type: string
                  guiOrder:
                    description: GUI Order
                    type: string
                  hideOnLoginPage:
                    description: Hide On Login Page.
                    type: boolean
                  hostedDomain:
                    description: Set 'hd' query parameter when logging in with Google.
                      Google will list accounts only for this domain. Keycloak validates
                      that the returned identity token has a claim for this domain.
                      When '*' is entered, any hosted account can be used.
                    type: string
                  linkOnly:
                    description: If true, users cannot log in through this provider.  They
                      can only link to this provider.  This is useful if you don't
                      want to allow login from the provider, but want to integrate
                      with a provider
                    type: boolean
                  postBrokerLoginFlowAlias:
                    description: Alias of authentication flow, which is triggered
                      after each login with this identity provider. Useful if you
                      want additional verification of each user authenticated with
                      this identity provider (for example OTP). Leave this empty if
                      you don't want any additional authenticators to be triggered
                      after login with this identity provider. Also note, that authenticator
                      implementations must assume that user is already set in ClientSession
                      as identity provider already set it.
                    type: string
                  providerId:
                    description: provider id, is always google, unless you have a
                      extended custom implementation
                    type: string
                  realm:
                    description: Realm Name
                    type: string
                  requestRefreshToken:
                    description: Set 'access_type' query parameter to 'offline' when
                      redirecting to google authorization endpoint, to get a refresh
                      token back. Useful if planning to use Token Exchange to retrieve
                      Google token to access Google APIs when the user is not at the
                      browser.
                    type: boolean
                  storeToken:
                    description: Enable/disable if tokens must be stored after authenticating
                      users.
                    type: boolean
                  syncMode:
                    description: Sync Mode
                    type: string
                  trustEmail:
                    description: If enabled then email provided by this provider is
                      not verified even if verification is enabled for the realm.
                    type: boolean
                  useUserIpParam:
                    description: Set 'userIp' query parameter when invoking on Google's
                      User Info service.  This will use the user's ip address.  Useful
                      if Google is throttling access to the User Info service.
                    type: boolean
                required:
                - clientId
                - clientSecretSecretRef
                - realm
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: GoogleIdentityProviderStatus defines the observed state of
              GoogleIdentityProvider.
            properties:
              atProvider:
                properties:
                  alias:
                    type: string
                  displayName:
                    type: string
                  id:
                    type: string
                  internalId:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
