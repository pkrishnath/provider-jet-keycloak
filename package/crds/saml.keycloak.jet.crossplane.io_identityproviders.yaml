---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: identityproviders.saml.keycloak.jet.crossplane.io
spec:
  group: saml.keycloak.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keycloakjet
    kind: IdentityProvider
    listKind: IdentityProviderList
    plural: identityproviders
    singular: identityprovider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IdentityProvider is the Schema for the IdentityProviders API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IdentityProviderSpec defines the desired state of IdentityProvider
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  addReadTokenRoleOnCreate:
                    description: Enable/disable if new users can read any stored tokens.
                      This assigns the broker.read-token role.
                    type: boolean
                  alias:
                    description: The alias uniquely identifies an identity provider
                      and it is also used to build the redirect uri.
                    type: string
                  authenticateByDefault:
                    description: Enable/disable authenticate users by default.
                    type: boolean
                  backchannelSupported:
                    description: Does the external IDP support backchannel logout?
                    type: boolean
                  displayName:
                    description: Friendly name for Identity Providers.
                    type: string
                  enabled:
                    description: Enable/disable this identity provider.
                    type: boolean
                  entityId:
                    description: The Entity ID that will be used to uniquely identify
                      this SAML Service Provider.
                    type: string
                  extraConfig:
                    additionalProperties:
                      type: string
                    type: object
                  firstBrokerLoginFlowAlias:
                    description: Alias of authentication flow, which is triggered
                      after first login with this identity provider. Term 'First Login'
                      means that there is not yet existing Keycloak account linked
                      with the authenticated identity provider account.
                    type: string
                  forceAuthn:
                    description: Require Force Authn.
                    type: boolean
                  guiOrder:
                    description: GUI Order
                    type: string
                  hideOnLoginPage:
                    description: Hide On Login Page.
                    type: boolean
                  linkOnly:
                    description: If true, users cannot log in through this provider.  They
                      can only link to this provider.  This is useful if you don't
                      want to allow login from the provider, but want to integrate
                      with a provider
                    type: boolean
                  nameIdPolicyFormat:
                    description: Name ID Policy Format.
                    type: string
                  postBindingAuthnRequest:
                    description: Post Binding Authn Request.
                    type: boolean
                  postBindingLogout:
                    description: Post Binding Logout.
                    type: boolean
                  postBindingResponse:
                    description: Post Binding Response.
                    type: boolean
                  postBrokerLoginFlowAlias:
                    description: Alias of authentication flow, which is triggered
                      after each login with this identity provider. Useful if you
                      want additional verification of each user authenticated with
                      this identity provider (for example OTP). Leave this empty if
                      you don't want any additional authenticators to be triggered
                      after login with this identity provider. Also note, that authenticator
                      implementations must assume that user is already set in ClientSession
                      as identity provider already set it.
                    type: string
                  principalAttribute:
                    description: Principal Attribute
                    type: string
                  principalType:
                    description: Principal Type
                    type: string
                  providerId:
                    description: provider id, is always saml, unless you have a custom
                      implementation
                    type: string
                  realm:
                    description: Realm Name
                    type: string
                  signatureAlgorithm:
                    description: Signing Algorithm.
                    type: string
                  signingCertificate:
                    description: Signing Certificate.
                    type: string
                  singleLogoutServiceUrl:
                    description: Logout URL.
                    type: string
                  singleSignOnServiceUrl:
                    description: SSO Logout URL.
                    type: string
                  storeToken:
                    description: Enable/disable if tokens must be stored after authenticating
                      users.
                    type: boolean
                  syncMode:
                    description: Sync Mode
                    type: string
                  trustEmail:
                    description: If enabled then email provided by this provider is
                      not verified even if verification is enabled for the realm.
                    type: boolean
                  validateSignature:
                    description: Enable/disable signature validation of SAML responses.
                    type: boolean
                  wantAssertionsEncrypted:
                    description: Want Assertions Encrypted.
                    type: boolean
                  wantAssertionsSigned:
                    description: Want Assertions Signed.
                    type: boolean
                  xmlSignKeyInfoKeyNameTransformer:
                    description: Sign Key Transformer.
                    type: string
                required:
                - alias
                - entityId
                - realm
                - singleSignOnServiceUrl
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: IdentityProviderStatus defines the observed state of IdentityProvider.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  internalId:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
